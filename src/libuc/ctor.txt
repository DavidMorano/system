template<typename ... Args>
static int modload_ctor(modload *op,Args ... args) noex {
	int		rs = SR_FAULT ;
	if (op && (args && ...)) {
	    cnullptr	np{} ;
	    rs = SR_OK ;

	} /* end if (non-null) */
	return rs ;
}
/* end subroutine (modload_ctor) */

static int modload_dtor(modload *op) noex {
	int		rs = SR_FAULT ;
	if (op) {
	    rs = SR_OK ;
	} /* end if (non-null) */
	return rs ;
}
/* end subroutine (modload_dtor) */

template<typename ... Args>
static inline int modload_magic(modload *op,Args ... args) noex {
	int		rs = SR_FAULT ;
	if (op && (args && ...)) {
	    rs = (op->magic == MODLOAD_MAGIC) ? SR_OK : SR_NOTOPEN ;
	}
	return rs ;
}
/* end subroutine (modload_magic) */
