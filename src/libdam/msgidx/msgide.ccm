/* msgide MODULE */
/* encoding=ISO8859-1 */
/* lang=C++20 */

/* message identification (MSG-ID) entry */
/* version %I% last-modified %G% */


/* revision history:

	= 2003-03-04, David A­D­ Morano
	Originally written for Rightcore Network Services.

*/

/* Copyright © 2003 David A­D­ Morano.  All rights reserved. */

module ;

#include	<envstandards.h>	/* MUST be first to configure */
#include	<clanguage.h>
#include	<utypedefs.h>
#include	<utypealiases.h>
#include	<usysdefs.h>
#include	<usysrets.h>

export module msgide ;

export {
    struct msgide_all {
	char		*a{} ;
	char		*recipient{} ;
	char		*messageid{} ;
	char		*from{} ;
	uint		count{} ;	/* count */
	uint		utime{} ;	/* time-stamp update */
	uint		ctime{} ;	/* time-stamp creation */
	uint		mtime{} ;	/* time-stamp message */
	uint		hash{} ;
	msgide_all() = default ;
	msgide_all(const msgide_all &) = delete ;
	msgide_all &operator = (const msgide_all &) = delete ;
	int start() noex ;
	int finish() noex ;
	int rd(char *,int) noex ;
	int wr(cchar *,int) noex ;
	~msgide_all() {
	    finish() ;
	} ;
    } ;
    struct msgide_update {
	uint		count{} ;
	uint		utime{} ;
	msgide_update() = default ;
	msgide_update(const msgide_update &) = delete ;
	msgide_update &operator = (const msgide_update &) = delete ;
	int start() noex ;
	int finish() noex ;
	int rd(char *,int) noex ;
	int wr(cchar *,int) noex ;
	~msgide_update() {
	    finish() ;
	} ;
    } ;
}


