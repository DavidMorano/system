# SVC
# TCPMUXD service table
#
#	The format of entries are:
#
#	service:
#		program= /usr/bin/prog,
#		args=	arg0 arg1,
#		user=	uucp,
#		group=	other,
#		opts=	options,
#		access=	netgroup(s)
#
#

#	The following substitutions are made on keyword value strings:

#		%V	TCPMUXD version string
#		%R	TCPMUXD program root
#		%N	local nodename
#		%D	local domainname
#		%H	local hostname

#		%s	service
#		%a	service arguments (if available)
#		%p	socket peername (if available)

#	The following are made on some authenticating servers:

#		%h	originating host (if known)
#		%u	network username (if known)
#		%(pass)	network password (if known)
#
#		${define}	substituted defines
#		${environment}	substituted environment variable
#

#
#	There are some built-in servers on some of the listener daemon
#	programs.  Some of these are listed below.  These internal
#	servers can be overridden by making an entry with the same
#	service name in this file.
#
# HELP:
#	**BUILT-IN** ('tcpmuxd' only)
#
#	This is a 'tcpmux' (by appropriate RFC) service requirement.
#
# TIME:
#	**BUILT-IN** ('tcpmuxd' only)
#
#	This is the same as INET 'time' service.
#
# DAYTIME:
#	**BUILT-IN** ('tcpmuxd' only)
#
#	This is the same as INET 'daytime' service.
#
# SHELLCMD:
#	**BUILT-IN** ('rexecd' only)
#
#	This is the same as Berkeley 'rsh' and 'rexec' services.
#
# CMD:
#	**BUILT_IN** ('rexecd' only)
#
#	This is what is provided by the old PCS 'REX' service.
#
#



uucp:
	access= rc ece,
	p= ${NCMP}/bin/uucico

finger:
	access= rc ece,
	p= fingers,
	a= fingers -R ${LOCAL}

bbpost:
	p= ${PCS}/bin/rbbpost

pingstat:
	access= rc ece,
	p= pingstat,
	a= pingstat -i

rmail:
	p= rmail,
	a= rmail %a

rmailer:
	access= rc ece,
	p= ${PCS}/bin/rmailerd,
	a= rmailerd

mailbridge:
	access= rc ece,
	p= imail,
	a= imail %a

sync:
	p= sync

systat:
	p= /usr/extra/sbin/systatd

netstat:
	p= /usr/extra/sbin/netstatd

wn:
	access= rc ece,
	p= wn

msinfo:
	a= msinfo -s la1m

exec:
	access= rc ece,
	p= /usr/sbin/in.rexecd,

cex:
	access= rc ece,
	p= ${LOCAL}/bin/cex,
	a= cex -D gateway -n finger %{ss}

iotd:
	so= lkcmd:issue,
	a= issue

motd:
	so= lkcmd:motd,
	a= motd

cotd:
	so= lkcmd:commandment,
	a= commandment +%{ss}

votd:
	so= lkcmd:bibleverse,
	a= bibleverse +%{ss}

hotd:
	so= lkcmd:calyear,
	a= calyear +%{ss}

qotd:
	so= lkcmd,
	a= <qotd %{ss}>

hols:
	so= lkcmd,
	a= holiday +%{ss}

maint:
	access= rightcore local ece,
	a= ksh -i

bibleq:
	a= bibleq -o clump %{ss}

bq:
	so= lkcmd:bibleq,
	a= bibleq -o clump %{ss}


# periodic daemon programs

mscheckup:
	p= mscheckup.cron

permissions:
	p= ${HOME}/sbin/permissions.cron

pingup:
	p= ${HOME}/sbin/pingstat.cron

crons:
	p= ${HOME}/sbin/crons

sysvar:
	p= ${HOME}/sbin/sysvar.cron


# testing

hello:
	a= echo hello world!

echoargs:
	a= echoargs %a

echostuff:
	access= rc ece,
	a= echo %V %R %N %D %s,

enum:
	p= ${TESTSERVERDIR}/enum,
	a= enum '%a'

modlist:
	a= modlist

env:
	access= rc ece,
	a= env,
	username= admin

whoami:
	access= rc ece,
	a= echo "host=%h user=%u"

reportid:
	access= rc ece,
	p= /home/dam/src/tcpmuxd/servers/reportid,
	user= guest,
	group= rc

echo:
	p= ${LOCAL}/bin/echod,
	a= echod -s

cat:
	p= ${TESTSERVERDIR}/catter

enum2:
	p= ${TESTSERVERDIR}/enum,
	a= enum '%a'

peername:
	p= ${PCS}/bin/pcsconf,
	a= pcsconf peername

wla:
	p= wla

sar:
	p= /usr/bin/sar,
	a= sar 1 2

dump:
	p= /usr/net/servers/dump

test1:
	p= /usr/net/servers/test1

finger:
	p= fingers



