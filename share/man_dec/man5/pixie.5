.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1996      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: pixie.5,v $ $Revision: 1.1.2.14 $ (DEC) $Date: 1996/02/21 19:30:34 $
.\"
.TH pixie 5 96/02/21 "Digital OSF1 UNIX V4.0"
.SH NAME
.PP
\*Lpixie\*O \- Adds profiling code to a program
.SH SYNOPSIS
.PP
.sS
\*Latom\*O \*Vappl_prog\*O  \*L\-tool\*O \*Lpixie\*O [\*L\-env \*Venviron\*O] [\*L\-toolargs\*O="\*Varg1\*O \*Varg2\*O ..."]  [\*Vatom_flags\*O...]
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vappl_prog\*O"
File name of a fully linked shared or nonshared executable to be
profiled.  This program should be compiled with the \*L\-g1\*O,
\*L\-g2\*O, or \*L\-g3\*O flag to obtain more complete profiling
information.  If the default symbol table level (\*L\-g0\*O) has
been used, line number information, static procedure names, and
file names are unavailable to the profiling code.
.LE
.SH FLAGS
.VL 4m
.LI "\*L\-tool \*Lpixie\*O"
Identifies the \*Lpixie\*O tool to the \*Latom\*O command.
.LI "\*L\-env \*Venviron\*O"
Identifies any special environment for the \*Lpixie\*O tool.
You can invoke the \*Lpixie\*O tool for a threaded application
program by specifying the \*Lthreads\*O environment.
You can invoke \*Lpixie\*O for a general-purpose environment by
omitting the \*L\-env\*O flag.
.LI "\*L\-toolargs\*O=""""\*Varg1\*O \*Varg2\*O ..."""""
Passes arguments to the \*Lpixie\*O tool's instrumentation routines.
Use whitespace characters to separate arguments from their parameters
(if any) and from other arguments.
.LI "\*Latom_flags\*O"
Specifies flags to the \*Latom\*O command.  See the \*Latom\*O(1)
reference page for descriptions of other flags accepted by the
\*Latom\*O command.
.LE
.PP
The \*Lpixie\*O tool accepts the following flags as arguments to the
\*L\-toolargs\*O flag:
.VL 4m
.LI "\*L\-[no]quiet\*O"
[Permits] or suppresses messages summarizing the binary-to-binary
translation process. Default: \*L\-noquiet\*O.
.LI "\*L\-bbaddrs \*Vname\*O"
Specify a name for the file of basic block addresses.  Default is to
remove any leading directory names from the \*Vprogram\*O
and append
\*L.Addrs\*O.
.LI "\*L\-bbcounts \*Vname\*O"
Specifies the full filename of the basic block counts file.
Default: \*Vprogram\*L.Counts\*O.
.\" ***FOLLOWING BELONGS UNDER BOTH toolargs AND PIXIE_ARGS PER JPW
.LI "\*L\-dirname \*Vdirectory\*O"
Specifies the directory to which \*Lpixie\*O writes the \*L\.Counts\*O
file for the run.  The default is the current directory.
.LI "\*L\-[no]pids\*O"
[Disables] or enables the addition of the process-id number to the
filename of the basic block counts file. This is useful for collecting
information for multiple invocations of the \*Lpixie\*O output file.
Default: \*L\-nopids\*O.
.LE
.PP
You can define the \*LPIXIE_ARGS\*O environment variable to supply the
following run-time flags to the instrumented program generated by
\*Lpixie\*O:
.VL 4m
.\"  ***CHANGE countdir TO dirname PER JPW
.\" .LI "\*L\-countdir \*Vdirectory\*O"
.LI "\*L\-dirname \*Vdirectory\*O"
Specifies the directory to which \*Lpixie\*O writes the \*L\.Counts\*O
file for the run.  The default is the current directory.
.LI "\*L\-[no]pids\*O"
[Disables] or enables the addition of the process-id number to the
filename of the basic block counts file. This is useful for collecting
information for multiple invocations of the pixie output file.
Default: \*L\-nopids\*O.
.LI "\*L\-sigdump\*O \*Vsigname\*O"
Specifies a signal name that the instrumented program will catch.
When the program catches this signal, it writes the basic block counts
to the \*L.Counts\*O file and resets all of the basic block counts to
zero.  Setting the basic block counts to zero allows multiple
profiling data files (which result from multiple instances of the
specified signal) to be merged into a single profile that reflects the
whole test run.  When multiple instances of the signal occur, you must
rename each of the individual \*L.Counts\*O files to, for example,
\*Lfoo.Counts.\*Vn\*O.  Renaming the files in this fashion allows you
to examine all of the \*L.Counts\*O files by issuing a \*Lprof\*O
command with a wildcard (*) for the increment field in the file names.
.sp
Your program must not reset the signal handler for the signal specified
by the \*L\-sigdump\*O flag.
The \*L\-sigdump\*O flag is useful for programs that never terminate.
.LE
.SH DESCRIPTION
.PP
.iX "pixie Atom tool"
The \*Lpixie\*O Atom tool reads an executable program, partitions it
into basic blocks, and writes an equivalent program containing
additional code that counts the execution of each basic block.
(A basic block is a region of the program that can be entered only at
the beginning and exited only at the end.) The \*Lpixie\*O utility also
generates a file containing the address of each of the basic blocks.
.PP
When you run the pixie-generated program, it will \- provided it
terminates normally or as a result of a call to \*Lexit\*O(2) \-
generate a file containing the basic block counts. The name of the file
is that of the original program with any leading directory names
removed and \*L.Counts\*O appended. Programs that call \*Lfork()\*O
generate multiple basic block counts files, each with the process-id
number appended to the name. The \*Lprof\*O(1) and \*Lpixstats\*O(1)
utilities can analyze these files and produce a listing of profiling
data.
.SH RELATED INFORMATION
.PP
\*Latom\*O(1), \*Lprof\*O(1), \*Lpixstats\*O(1).
.PP
\*EProgrammer's Guide\*O
.EQ
delim off
.EN
